/* --- General Body and Background Setup --- */
body {
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
    margin: 0;
    min-height: 100vh;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;

    /* These properties apply to the background image set in the HTML */
    background-position: center center;
    background-size: cover;
}

/* This pseudo-element creates the blurred layer behind everything */
body::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    backdrop-filter: blur(35px) brightness(0.8);
    -webkit-backdrop-filter: blur(35px) brightness(0.8); /* For Safari support */
    z-index: -1; /* Place it behind the content */

    animation: fadeOut 0.6s ease-in forwards;
}

#page-overlay {
    position: fixed; /* Cover the entire viewport */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(180, 180, 180, 0);
    z-index: 9999; /* Ensure it's on top of everything */
    pointer-events: none; /* Allow clicks to pass through */
    /* Apply the entry animation by default */
    animation: fadeIn 0.8s ease-out forwards;
}
body.exiting #page-overlay {
    animation: fadeOut 0.8s ease-in forwards;
}
/* Fades the white screen away (opacity 1 to 0) */
@keyframes fadeIn {
    from { opacity: 1; }
    to { opacity: 0; }
}

/* Brings the white screen back (opacity 0 to 1) */
@keyframes fadeOut {
    from { opacity: 0; }
    to { opacity: 1; }
}


/* --- Main Viewer and Navigation --- */
.viewer-container {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.nav-arrow {
    position: absolute;
    top: 0;
    height: 100%;
    width: 50%;
    z-index: 10;
}
.nav-arrow.prev { left: 0; }
.nav-arrow.next { right: 0; }
.nav-arrow.prev:hover { cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M15 18l-6-6 6-6"/></svg>'), auto; }
.nav-arrow.next:hover { cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 18l6-6-6-6"/></svg>'), auto; }


/* --- The White Photo Frame --- */
.photo-frame {
    background-color: white;
    color: #333; /* Dark text for readability on white */
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4);
    max-width: 90vw;
    max-height: 90vh;
    display: flex;
    flex-direction: column;
}

/* --- Framed Image Style (UPDATED) --- */
.image-wrapper {
    /* This element no longer needs flex properties. */
    /* It's just a container now. */
    position: relative; 
}

.image-wrapper img {
    display: block;
    margin: 0 auto; /* Center the image horizontally */

    /* --- SMART SIZING RULES --- */
    /* Remove the old fixed height/width */
    /* width: 100%; */
    /* height: 100%; */

    /* The image cannot be wider than its container */
    max-width: 100%;
    
    /* The image cannot be taller than 70% of the viewport height. */
    /* This leaves room for the metadata and frame padding. */
    max-height: 80vh; 
    
    object-fit: contain;
    border-radius: 10px;
}
/* --- Metadata Panel and Table Style (UPDATED) --- */
.metadata-panel {
    flex-shrink: 0;
    padding-top: 15px;
    padding-bottom: 10px;
    width: 100%;

    /* --- NEW FLEXBOX LAYOUT --- */
    display: flex;
    justify-content: space-between; /* Pushes children to opposite ends */
    align-items: center; /* Vertically aligns items */
}

/* --- Left Side: Shot Info --- */
.shot-info {
    /* Set a max-width of roughly 1/3 of the container */
    max-width: 55%; 
    flex: 1 1 55%; /* Flex-grow, flex-shrink, flex-basis */
}
.shot-info table {
    width: 100%;
    border-collapse: collapse;
    text-align: center;
}
.shot-info th {
    color: #888;
    font-size: 0.8rem; /* Adjusted for smaller space */
    font-weight: 600;
    padding-bottom: 2px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}
.shot-info td {
    color: #222;
    font-size: 1.4rem; /* Adjusted for smaller space */
    font-weight: 500;
    /* Apply the fade-in animation */
    animation: fadeInAfterDelay 1s ease-out forwards;
}

/* --- Right Side: Camera Info --- */
.camera-info {
    display: flex;
    align-items: center;
    justify-content: flex-end; /* Aligns content to the right */
    flex-shrink: 0; /* Prevents it from shrinking */
    padding-left: 20px;
}

.make-icon {
    height: 3.5rem; /* Adjust size as needed */
    margin-right: 15px;
}

.divider {
    width: 1px;
    height: 2.5rem;
    background-color: #ddd;
    margin-right: 15px;
}

.camera-text {
    display: flex;
    flex-direction: column;
    text-align: left;
}

.camera-model {
    font-size: 1.1rem;
    font-weight: 600;
    color: #333;
}

.lens-model {
    font-size: 0.8rem;
    color: #777;
}

/* Add this new block to define the animation steps */
@keyframes slideAndFadeIn {
    from {
        opacity: 0;
        transform: translateY(40px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}
@keyframes slideAndFadeOut {
    from {
        opacity: 1;
        transform: translateY(0);
    }
    to {
        opacity: 0;
        transform: translateY(-40px);
    }
}

/* The White Photo Frame */
.photo-frame {
    background-color: white;
    color: #333;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4);
    max-width: 94vw;
    max-height: 94vh;
    display: flex;
    flex-direction: column;

    /* Apply the animation here */
    /* It will run for 1.2s, use an ease-out curve, and stay at its final state */
    animation: slideAndFadeIn 0.5s ease-out forwards;
}

body.exiting .photo-frame {
    animation: slideAndFadeOut 0.5s ease-out forwards;
}

/* --- NEW ANIMATION FOR METADATA --- */

/* 1. Define the animation keyframes */
@keyframes fadeInAfterDelay {
    /* The element stays invisible for the first 30% of the animation time */
    0% { opacity: 0; }
    30% { opacity: 0; }
    /* It fades in from 30% to 100% */
    100% { opacity: 1; }
}

/* 2. Apply the animation to the metadata numbers */
.metadata-panel td {
    /* Run the animation over 1 second, which makes the 30% delay equal to 0.3s */
    animation: fadeInAfterDelay 1s ease-out forwards;
}